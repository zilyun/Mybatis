<?xml version="1.0" encoding="UTF-8"?>
<!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->

<!-- 태그 규칙을 정의한 DTD 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	SQL 맵퍼 파일은 루트 엘리먼트 <mapper>를 작성하는 것으로 시작합니다.
	프로젝트에서는 기본적으로 여러 개의 <mapper>를 가지기 때문에 중복되는 이름을 가진 SQL 문이 존재할 수 있습니다.
	따라서 각 <mapper> 마다 namespace 속성을 이용하여 <mapper>를 구분합니다. 
 -->
<mapper namespace="org.hta.mybatis.member">
<!-- 
	1. id 속성 : SQL 문을 작성할 때 각각의 SQL문을 구분하기 위해 id 속성을 사용합니다.
	
	2. parameterType 속성 : SQL문에 값 전달하기 위해 파라미터의 자료형을 작성합니다.
		마이바티스의 입력 매개 변수를 #{프로퍼티명} 또는 #{이름상관없음}으로 표시합니다.
		(1)parameterType="Member" 인 경우 #{프로퍼티명}으로 사용합니다.
		(2)paramterType이 기본형이나 String인 경우 어떤 이름을 사용해도 상관없습니다.
				parameterType="String" :
				parameterType은 DAO(MemberDAO)에서 
				session.selectOne("org.hta.mybatis.member.select", id); 문장의 두 번째 매개변수의 자료형입니다.
				
				#{inputid} : id의 값을 사용하기 위해 어떤 이름을 사용해도 무방합니다.
				=> 매개변수의 자료형이 기본형이나 String인 경우 어떤 이름을 사용해도 상관없습니다.
				
	3. resultType 속성 : select 문의 실행 결과를 담을 객체를 지정합니다.
		- 마이바티스 설정 파일(sqlMapConfig.xml)에 별명이 정의되어 있으면 별명을 사용할 수 있습니다.
		- 마이바티스는 select 결과를 저장하고자 resultType에 선언된 클래스의 인스턴스를 생성합니다.
		  그리고 각 칼럼에 대응하는 setter 메서드를 찾아서 호출합니다.
		- 컬럼의 이름과 일치하는 setter가 없다면 해당 컬럼의 값은 인스턴스에 저장되지 않습니다.
 -->

	<select id="select" parameterType="String" resultType="Member">
		select id, password from member22 where id = #{inputid}
	</select>
	
	<!-- 
		1. id 속성 : SQL문을 작성할 때 각각의 SQL문을 구분하기 위해 id 속성을 사용합니다.
		2. parameterType 속성: SQL문에 값 전달하기 위해 파라미터의 자료형을 작성합니다.
								패키지 경로를 포함한 전체 클래스명이나 별칭을 사용하면 됩니다.
			
			parameterType="Member" 인 경우
			#{id} : Member 객체의 프로퍼티 값이 적용됩니다.
				org.hta.member.domain.Member.java의 
				public String getId() {
					return id;
				}	
					의 반환값이 적용됩니다.
					
			#{password} : Member 객체의 프로퍼티 값이 적용됩니다.
			org.hta.member.domain.Member.java 의 
				public String getPassword() {
					return password;
				}
					의 반환값이 적용됩니다.
	 -->
	
	<!-- insert 태그에는 insert SQL문을 사용합니다. -->
	<insert id="insert" parameterType="org.hta.member.domain.Member">
		insert into member22
		values
		(#{id}, #{password})
	</insert>
</mapper>